name: Release Build

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: windows
            arch: x64
          - os: macos-latest
            platform: darwin
            arch: x64
          - os: macos-latest
            platform: darwin
            arch: arm64
          - os: ubuntu-latest
            platform: linux
            arch: x64
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Download Prebuilt binary
        if: matrix.platform == 'windows'
        run: |
          npm run download-node:win-${{ matrix.arch }}
          npm run download-python:win-${{ matrix.arch }}
          npm run download-uv:win-${{ matrix.arch }}

      
      - name: Create release directory
        run: mkdir -p output
      
      - name: Build Windows
        if: matrix.platform == 'windows'
        run: |
          npm run package:windows-installers
          mv release/v${{ env.VERSION }}/*.exe output/
      
      - name: Build macOS
        if: matrix.platform == 'darwin'
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: |
          if [ "${{ matrix.arch }}" = "arm64" ]; then
            npm run package:darwin-dmg:arm64
          else
            npm run package:darwin-dmg:x64
          fi
          mv release/v${{ env.VERSION }}/*.dmg output/
      
      - name: Build Linux
        if: matrix.platform == 'linux'
        run: |
          npm run package:linux
          mv release/v${{ env.VERSION }}/*.{AppImage,deb,tar.gz,zip} output/
      
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: output/*.{AppImage,deb,tar.gz,exe,dmg,zip}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
